{"version":3,"file":"regexp-events.umd.min.js","sources":["../node_modules/lodash.isstring/index.js","../src/Event.js","../src/utils.js","../node_modules/lodash.isfunction/index.js","../node_modules/lodash.isregexp/index.js","../src/Emitter.js"],"sourcesContent":["/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import isString from \"lodash.isstring\";\n\n/**\n * @classdesc the basic event class\n * @class Event\n */\nexport default class Event {\n\t/**\n\t * @param  {String} type - the type of event, this can be anything, but its a good idea just to make it a string\n\t * @param  {Emitter} target - the emitter that is firing this event\n\t * @param  {Array} args - an array of arguments that is used on the listener functions\n\t * @return {Event}\n\t */\n\tconstructor(type, args, target) {\n\t\tif (!isString(type)) throw new Error(\"Event.type has to be a string\");\n\n\t\t/**\n\t\t * the type of event\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * an array of arguments that are used when calling the listener function\n\t\t * @type {Array}\n\t\t */\n\t\tthis.args = args || [];\n\n\t\t/**\n\t\t * a reference to the emitter that fired the event\n\t\t * @type {Emitter}\n\t\t */\n\t\tthis.target = target;\n\t}\n}\n","export function clearListeners(eventMap, eventType, force) {\n\tif (force) {\n\t\teventMap.delete(eventType);\n\t} else {\n\t\tlet listeners = eventMap.get(eventType);\n\t\tlisteners.filter(listener => !listener.isStatic).forEach((listener, i) => {\n\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t});\n\n\t\t// if there are not listeners left, remove the array\n\t\tif (listeners.length === 0) eventMap.delete(eventType);\n\t}\n}\n\nexport function isRegExpEqual(r1, r2) {\n\treturn (\n\t\tr1 instanceof RegExp &&\n\t\tr2 instanceof RegExp &&\n\t\tr2.source === r1.source &&\n\t\tr2.global === r1.global &&\n\t\tr2.ignoreCase === r1.ignoreCase &&\n\t\tr2.multiline === r1.multiline &&\n\t\tr2.sticky === r1.sticky &&\n\t\tr2.unicode === r1.unicode\n\t);\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    nullTag = '[object Null]',\n    proxyTag = '[object Proxy]',\n    undefinedTag = '[object Undefined]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isFunction;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObject(value) && objectToString.call(value) == regexpTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n","import Event from \"./Event\";\nimport { clearListeners, isRegExpEqual } from \"./utils\";\nimport isString from \"lodash.isstring\";\nimport isFunction from \"lodash.isfunction\";\nimport isRegExp from \"lodash.isregexp\";\n\nfunction isBoolean(v) {\n\treturn v === true || v === false;\n}\n\nfunction findInArgArray(args, fn, start, df) {\n\tfor (let i = 0; i < args.length - start; i++) if (fn(args[start + i])) return args[start + i];\n\n\treturn df;\n}\n\n/**\n * a simple event emitter\n */\nexport default class Emitter {\n\tconstructor() {\n\t\t/**\n\t\t * whether to suppress all events on this emitter\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.suppressEvents = false;\n\t}\n\n\t/**\n\t * returns the Map that is used to store events for emitters\n\t * @param {Emitter} emitter\n\t * @return {WeakMap}\n\t */\n\tstatic getEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\treturn map.get(emitter);\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic createEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tlet events = new Map();\n\t\tmap.set(emitter, events);\n\t\treturn events;\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic removeEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tif (map.has(emitter)) map.delete(emitter);\n\t}\n\n\t/**\n\t * returns the Map used to store events\n\t * @return {Map}\n\t */\n\tget eventMap() {\n\t\treturn Emitter.getEventMap(this);\n\t}\n\n\t/**\n\t * listens for an event of this emitter\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - the function to be called when the event fires\n\t * @param  {Object|Boolean|Number} [context] - the context to run the function under\n\t * @param  {Boolean|Number|Object} [isStatic=true] - whether this listener can be removed without force\n\t * @param  {Number|Boolean|Object} [times=Infinity] the times this listener can be called before it removes it self\n\t * @return {this}\n\t */\n\ton(eventType, listener, context, isStatic, times) {\n\t\tif (!isString(eventType) && !isRegExp(eventType) && !(eventType instanceof Event))\n\t\t\tthrow new Error(\"Emitter.on requires a String, Event or RegExp as the first argument\");\n\n\t\tif (!isFunction(listener)) throw new Error(\"Emitter.on requires a function as the second argument\");\n\n\t\tisStatic = findInArgArray(arguments, isBoolean, 2, false);\n\t\ttimes = findInArgArray(arguments, n => Number.isFinite(n) || n === Infinity, 2, Infinity);\n\t\tcontext = findInArgArray(\n\t\t\targuments,\n\t\t\to => {\n\t\t\t\treturn typeof o === \"object\";\n\t\t\t},\n\t\t\t2,\n\t\t\tundefined,\n\t\t);\n\n\t\tlet eventMap = this.eventMap;\n\t\tif (!eventMap) eventMap = Emitter.createEventMap(this);\n\n\t\tif (eventType instanceof Event) eventType = eventType.type;\n\n\t\tif (!eventMap.has(eventType)) eventMap.set(eventType, []);\n\n\t\t// add the listener to the array\n\t\teventMap.get(eventType).push({\n\t\t\tfunc: listener,\n\t\t\tctx: context,\n\t\t\ttimes: times,\n\t\t\tisStatic: isStatic,\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * binds a listener that removes its self once the event is fired\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener\n\t * @param  {Object|Boolean} [context] - the context to run the functions under\n\t * @param  {Boolean|Object} [isStatic = false] - whether this listener can be removed without using force\n\t * @return {this}\n\t */\n\tonce(eventType, listener, context, isStatic) {\n\t\treturn this.on(eventType, listener, 1, context, isStatic);\n\t}\n\n\t/**\n\t * removes a listener\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - this has to be the exact function that was bound\n\t * @param  {*|Boolean} [context] - this has to be the exact context that was bound with the listener\n\t * @param  {Boolean} [force=false] - whether to force remove the listeners\n\t * @return {this}\n\t */\n\toff(eventType, listener, context, force) {\n\t\tif (eventType == null) throw new Error(\"Emitter.off requires a String or a RegExp as the first argument\");\n\n\t\tif (!isFunction(listener)) throw new Error(\"Emitter.off requires a function as the second argument\");\n\n\t\tforce = findInArgArray(arguments, isBoolean, 2, false);\n\t\tcontext = findInArgArray(arguments, o => typeof o === \"object\", 2, undefined);\n\n\t\tif (eventType instanceof Event) eventType = eventType.type;\n\n\t\tlet eventMap = this.eventMap;\n\t\tif (!eventMap) return this; // if there is not event map, just exit\n\n\t\tif (!eventMap.has(eventType)) eventMap.set(eventType, []);\n\n\t\tif (isString(eventType)) {\n\t\t\tlet listeners = eventMap.get(eventType);\n\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\tif (listenerData.func === listener && listenerData.ctx === context && (listenerData.isStatic ? force : true))\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t});\n\n\t\t\t// remove the listener array if there are no listeners left\n\t\t\tif (listeners.length === 0) eventMap.delete(eventType);\n\t\t} else if (isRegExp(eventType)) {\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\t// if the regexp flags and source match then remove the listeners\n\t\t\t\tif (isRegExp(listenersEventType) && isRegExpEqual(eventType, listenersEventType)) {\n\t\t\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlistenerData.func === listener &&\n\t\t\t\t\t\t\tlistenerData.ctx === context &&\n\t\t\t\t\t\t\t(listenerData.isStatic ? force : true)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\t// remove the listener array if there are no listeners left\n\t\t\t\t\tif (listeners.length === 0) eventMap.delete(listenersEventType);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * fires ad event on this emitter\n\t * @param {String|Event} eventType\n\t * @param {...*} args - the arguments to be passed to the listeners. these will be ignored if an Event was passed in\n\t * @return {this}\n\t */\n\temit(eventType, ...args) {\n\t\tif (this.suppressEvents) return;\n\t\tlet eventMap = this.eventMap;\n\t\tlet event;\n\n\t\t// if there is not event map, just exit\n\t\tif (!eventMap) return this;\n\n\t\t// if its an event use the events type\n\t\tif (eventType instanceof Event) {\n\t\t\tevent = eventType;\n\n\t\t\t// if the event dose not have a target set it to this emitter\n\t\t\tif (event.target === undefined) event.target = this;\n\t\t} else if (isString(eventType)) event = new Event(eventType, args, this);\n\t\telse throw new Error(\"Emitter.emit requires a String or Event as the first argument\");\n\n\t\tlet listenerArgs = Array.from(event.args).concat([event]);\n\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\tif (\n\t\t\t\t// if they are both strings and they match\n\t\t\t\t(isString(event.type) && listenersEventType === event.type) ||\n\t\t\t\t// if the listenersEventType is a RegExp and the event type is a string, see if they match\n\t\t\t\t(isString(event.type) && isRegExp(listenersEventType) && listenersEventType.test(event.type)) ||\n\t\t\t\t// if they are both RegExp see if they match\n\t\t\t\t(isRegExp(event.type) && isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, event.type))\n\t\t\t) {\n\t\t\t\tlisteners.forEach(listener => {\n\t\t\t\t\tlistener.func.apply(listener.ctx, listenerArgs);\n\t\t\t\t\tif (--listener.times <= 0) this.off(event.type, listener.func, listener.ctx, true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * removes all events of \"eventType\"\n\t * NOTE: passing no arguments will clean all listeners\n\t * NOTE: passing a single boolean will clear all listens and act as the force flag\n\t * @param {RegExp|String|Event|Boolean} [eventType] - the type of event\n\t * @param {Boolean} [force = false] - whether to force remove the listeners\n\t * @param {Boolean} [useRegExp = true] - whether to use the RegExp to test other types\n\t * @return {this}\n\t */\n\tclear(eventType, force = false, useRegExp = true) {\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is no event map, just exit\n\t\tif (!eventMap) return this;\n\n\t\tif (isString(eventType)) {\n\t\t\tclearListeners(eventMap, eventType, force);\n\t\t} else if (eventType instanceof Event) {\n\t\t\tclearListeners(eventMap, eventType.type, force);\n\t\t} else if (isRegExp(eventType)) {\n\t\t\tArray.from(eventMap)\n\t\t\t\t.map(a => a[0])\n\t\t\t\t.forEach(listenersEventType => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclearListeners(eventMap, listenersEventType, force);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (arguments.length === 1 && eventType === true) {\n\t\t\t// remove all listeners\n\t\t\teventMap.clear();\n\t\t} else if ((eventType === false || eventType === undefined) && arguments.length <= 1) {\n\t\t\t// remove all listeners that are not static\n\t\t\teventMap.forEach((listeners, type) => {\n\t\t\t\tlisteners.filter(listener => !listener.isStatic).forEach(listener => {\n\t\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t\t});\n\n\t\t\t\t// if there are no listeners left, remove the array\n\t\t\t\tif (listeners.length === 0) eventMap.delete(type);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * returns the number of listeners bound to the event\n\t * @param  {RegExp|String|Event} [eventType]\n\t * @param {Boolean} [useRegExp] - whether to use the RegExp to test other types\n\t * @return {Boolean}\n\t */\n\tcount(eventType, useRegExp = true) {\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is not event map, just exit\n\t\tif (!eventMap) return 0;\n\n\t\tif (isString(eventType)) {\n\t\t\treturn eventMap.has(eventType) ? eventMap.get(eventType).length : 0;\n\t\t} else if (eventType instanceof Event) {\n\t\t\treturn eventMap.has(eventType.type) ? eventMap.get(eventType.type).length : 0;\n\t\t} else if (isRegExp(eventType)) {\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\tif (\n\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t) {\n\t\t\t\t\ttotal += listeners.length;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn total;\n\t\t} else {\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach(listeners => {\n\t\t\t\ttotal += listeners.length;\n\t\t\t});\n\t\t\treturn total;\n\t\t}\n\t}\n\n\t/**\n\t * cleans up the emitter for GC\n\t */\n\tdispose() {\n\t\tEmitter.removeEventMap(this);\n\t\treturn this;\n\t}\n}\n"],"names":["stringTag","objectToString","Object","prototype","toString","isArray","Array","value","call","Event","type","args","target","isString","Error","clearListeners","eventMap","eventType","force","delete","listeners","get","filter","listener","isStatic","forEach","i","splice","indexOf","length","isRegExpEqual","r1","r2","RegExp","source","global","ignoreCase","multiline","sticky","unicode","asyncTag","funcTag","genTag","nullTag","proxyTag","undefinedTag","freeGlobal","freeSelf","self","root","Function","objectProto","hasOwnProperty","nativeObjectToString","Symbol","symToStringTag","toStringTag","undefined","baseGetTag","isOwn","tag","unmasked","e","result","getRawTag","regexpTag","freeExports","exports","nodeType","freeModule","module","freeProcess","process","nodeUtil","binding","nodeIsRegExp","isRegExp","func","isBoolean","v","findInArgArray","fn","start","df","Emitter","suppressEvents","context","times","isFunction","arguments","Number","isFinite","n","Infinity","o","this","createEventMap","has","set","push","on","listenerData","ctx","listenersEventType","event","listenerArgs","from","concat","test","apply","_this","off","useRegExp","map","a","clear","total","removeEventMap","getEventMap","emitter","events","WeakMap","Map"],"mappings":"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"}
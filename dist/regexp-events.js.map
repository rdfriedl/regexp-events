{"version":3,"file":"regexp-events.js","sources":["../node_modules/lodash.isstring/index.js","../src/Event.js","../src/utils.js","../node_modules/lodash.isfunction/index.js","../node_modules/lodash.isregexp/index.js","../src/Emitter.js"],"sourcesContent":["/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import isString from \"lodash.isstring\";\n\n/**\n * @classdesc the basic event class\n * @class Event\n */\nexport default class Event {\n\t/**\n\t * @param  {String} type - the type of event, this can be anything, but its a good idea just to make it a string\n\t * @param  {Emitter} target - the emitter that is firing this event\n\t * @param  {Array} args - an array of arguments that is used on the listener functions\n\t * @return {Event}\n\t */\n\tconstructor(type, args, target) {\n\t\tif (!isString(type)) throw new Error(\"Event.type has to be a string\");\n\n\t\t/**\n\t\t * the type of event\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * an array of arguments that are used when calling the listener function\n\t\t * @type {Array}\n\t\t */\n\t\tthis.args = args || [];\n\n\t\t/**\n\t\t * a reference to the emitter that fired the event\n\t\t * @type {Emitter}\n\t\t */\n\t\tthis.target = target;\n\t}\n}\n","export function clearListeners(eventMap, eventType, force) {\n\tif (force) {\n\t\teventMap.delete(eventType);\n\t} else {\n\t\tlet listeners = eventMap.get(eventType);\n\t\tlisteners.filter(listener => !listener.isStatic).forEach((listener, i) => {\n\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t});\n\n\t\t// if there are not listeners left, remove the array\n\t\tif (listeners.length === 0) eventMap.delete(eventType);\n\t}\n}\n\nexport function isRegExpEqual(r1, r2) {\n\treturn (\n\t\tr1 instanceof RegExp &&\n\t\tr2 instanceof RegExp &&\n\t\tr2.source === r1.source &&\n\t\tr2.global === r1.global &&\n\t\tr2.ignoreCase === r1.ignoreCase &&\n\t\tr2.multiline === r1.multiline &&\n\t\tr2.sticky === r1.sticky &&\n\t\tr2.unicode === r1.unicode\n\t);\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    nullTag = '[object Null]',\n    proxyTag = '[object Proxy]',\n    undefinedTag = '[object Undefined]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isFunction;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObject(value) && objectToString.call(value) == regexpTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n","import Event from \"./Event\";\nimport { clearListeners, isRegExpEqual } from \"./utils\";\nimport isString from \"lodash.isstring\";\nimport isFunction from \"lodash.isfunction\";\nimport isRegExp from \"lodash.isregexp\";\n\nfunction isBoolean(v) {\n\treturn v === true || v === false;\n}\n\nfunction findInArgArray(args, fn, start, df) {\n\tfor (let i = 0; i < args.length - start; i++) if (fn(args[start + i])) return args[start + i];\n\n\treturn df;\n}\n\n/**\n * a simple event emitter\n */\nexport default class Emitter {\n\tconstructor() {\n\t\t/**\n\t\t * whether to suppress all events on this emitter\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.suppressEvents = false;\n\t}\n\n\t/**\n\t * returns the Map that is used to store events for emitters\n\t * @param {Emitter} emitter\n\t * @return {WeakMap}\n\t */\n\tstatic getEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\treturn map.get(emitter);\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic createEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tlet events = new Map();\n\t\tmap.set(emitter, events);\n\t\treturn events;\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic removeEventMap(emitter) {\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tif (map.has(emitter)) map.delete(emitter);\n\t}\n\n\t/**\n\t * returns the Map used to store events\n\t * @return {Map}\n\t */\n\tget eventMap() {\n\t\treturn Emitter.getEventMap(this);\n\t}\n\n\t/**\n\t * listens for an event of this emitter\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - the function to be called when the event fires\n\t * @param  {Object|Boolean|Number} [context] - the context to run the function under\n\t * @param  {Boolean|Number|Object} [isStatic=true] - whether this listener can be removed without force\n\t * @param  {Number|Boolean|Object} [times=Infinity] the times this listener can be called before it removes it self\n\t * @return {this}\n\t */\n\ton(eventType, listener, context, isStatic, times) {\n\t\tif (!isString(eventType) && !isRegExp(eventType) && !(eventType instanceof Event))\n\t\t\tthrow new Error(\"Emitter.on requires a String, Event or RegExp as the first argument\");\n\n\t\tif (!isFunction(listener)) throw new Error(\"Emitter.on requires a function as the second argument\");\n\n\t\tisStatic = findInArgArray(arguments, isBoolean, 2, false);\n\t\ttimes = findInArgArray(arguments, n => Number.isFinite(n) || n === Infinity, 2, Infinity);\n\t\tcontext = findInArgArray(\n\t\t\targuments,\n\t\t\to => {\n\t\t\t\treturn typeof o === \"object\";\n\t\t\t},\n\t\t\t2,\n\t\t\tundefined,\n\t\t);\n\n\t\tlet eventMap = this.eventMap;\n\t\tif (!eventMap) eventMap = Emitter.createEventMap(this);\n\n\t\tif (eventType instanceof Event) eventType = eventType.type;\n\n\t\tif (!eventMap.has(eventType)) eventMap.set(eventType, []);\n\n\t\t// add the listener to the array\n\t\teventMap.get(eventType).push({\n\t\t\tfunc: listener,\n\t\t\tctx: context,\n\t\t\ttimes: times,\n\t\t\tisStatic: isStatic,\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * binds a listener that removes its self once the event is fired\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener\n\t * @param  {Object|Boolean} [context] - the context to run the functions under\n\t * @param  {Boolean|Object} [isStatic = false] - whether this listener can be removed without using force\n\t * @return {this}\n\t */\n\tonce(eventType, listener, context, isStatic) {\n\t\treturn this.on(eventType, listener, 1, context, isStatic);\n\t}\n\n\t/**\n\t * removes a listener\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - this has to be the exact function that was bound\n\t * @param  {*|Boolean} [context] - this has to be the exact context that was bound with the listener\n\t * @param  {Boolean} [force=false] - whether to force remove the listeners\n\t * @return {this}\n\t */\n\toff(eventType, listener, context, force) {\n\t\tif (eventType == null) throw new Error(\"Emitter.off requires a String or a RegExp as the first argument\");\n\n\t\tif (!isFunction(listener)) throw new Error(\"Emitter.off requires a function as the second argument\");\n\n\t\tforce = findInArgArray(arguments, isBoolean, 2, false);\n\t\tcontext = findInArgArray(arguments, o => typeof o === \"object\", 2, undefined);\n\n\t\tif (eventType instanceof Event) eventType = eventType.type;\n\n\t\tlet eventMap = this.eventMap;\n\t\tif (!eventMap) return this; // if there is not event map, just exit\n\n\t\tif (!eventMap.has(eventType)) eventMap.set(eventType, []);\n\n\t\tif (isString(eventType)) {\n\t\t\tlet listeners = eventMap.get(eventType);\n\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\tif (listenerData.func === listener && listenerData.ctx === context && (listenerData.isStatic ? force : true))\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t});\n\n\t\t\t// remove the listener array if there are no listeners left\n\t\t\tif (listeners.length === 0) eventMap.delete(eventType);\n\t\t} else if (isRegExp(eventType)) {\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\t// if the regexp flags and source match then remove the listeners\n\t\t\t\tif (isRegExp(listenersEventType) && isRegExpEqual(eventType, listenersEventType)) {\n\t\t\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlistenerData.func === listener &&\n\t\t\t\t\t\t\tlistenerData.ctx === context &&\n\t\t\t\t\t\t\t(listenerData.isStatic ? force : true)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\t// remove the listener array if there are no listeners left\n\t\t\t\t\tif (listeners.length === 0) eventMap.delete(listenersEventType);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * fires ad event on this emitter\n\t * @param {String|Event} eventType\n\t * @param {...*} args - the arguments to be passed to the listeners. these will be ignored if an Event was passed in\n\t * @return {this}\n\t */\n\temit(eventType, ...args) {\n\t\tif (this.suppressEvents) return;\n\t\tlet eventMap = this.eventMap;\n\t\tlet event;\n\n\t\t// if there is not event map, just exit\n\t\tif (!eventMap) return this;\n\n\t\t// if its an event use the events type\n\t\tif (eventType instanceof Event) {\n\t\t\tevent = eventType;\n\n\t\t\t// if the event dose not have a target set it to this emitter\n\t\t\tif (event.target === undefined) event.target = this;\n\t\t} else if (isString(eventType)) event = new Event(eventType, args, this);\n\t\telse throw new Error(\"Emitter.emit requires a String or Event as the first argument\");\n\n\t\tlet listenerArgs = Array.from(event.args).concat([event]);\n\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\tif (\n\t\t\t\t// if they are both strings and they match\n\t\t\t\t(isString(event.type) && listenersEventType === event.type) ||\n\t\t\t\t// if the listenersEventType is a RegExp and the event type is a string, see if they match\n\t\t\t\t(isString(event.type) && isRegExp(listenersEventType) && listenersEventType.test(event.type)) ||\n\t\t\t\t// if they are both RegExp see if they match\n\t\t\t\t(isRegExp(event.type) && isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, event.type))\n\t\t\t) {\n\t\t\t\tlisteners.forEach(listener => {\n\t\t\t\t\tlistener.func.apply(listener.ctx, listenerArgs);\n\t\t\t\t\tif (--listener.times <= 0) this.off(event.type, listener.func, listener.ctx, true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * removes all events of \"eventType\"\n\t * NOTE: passing no arguments will clean all listeners\n\t * NOTE: passing a single boolean will clear all listens and act as the force flag\n\t * @param {RegExp|String|Event|Boolean} [eventType] - the type of event\n\t * @param {Boolean} [force = false] - whether to force remove the listeners\n\t * @param {Boolean} [useRegExp = true] - whether to use the RegExp to test other types\n\t * @return {this}\n\t */\n\tclear(eventType, force = false, useRegExp = true) {\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is no event map, just exit\n\t\tif (!eventMap) return this;\n\n\t\tif (isString(eventType)) {\n\t\t\tclearListeners(eventMap, eventType, force);\n\t\t} else if (eventType instanceof Event) {\n\t\t\tclearListeners(eventMap, eventType.type, force);\n\t\t} else if (isRegExp(eventType)) {\n\t\t\tArray.from(eventMap)\n\t\t\t\t.map(a => a[0])\n\t\t\t\t.forEach(listenersEventType => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclearListeners(eventMap, listenersEventType, force);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (arguments.length === 1 && eventType === true) {\n\t\t\t// remove all listeners\n\t\t\teventMap.clear();\n\t\t} else if ((eventType === false || eventType === undefined) && arguments.length <= 1) {\n\t\t\t// remove all listeners that are not static\n\t\t\teventMap.forEach((listeners, type) => {\n\t\t\t\tlisteners.filter(listener => !listener.isStatic).forEach(listener => {\n\t\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t\t});\n\n\t\t\t\t// if there are no listeners left, remove the array\n\t\t\t\tif (listeners.length === 0) eventMap.delete(type);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * returns the number of listeners bound to the event\n\t * @param  {RegExp|String|Event} [eventType]\n\t * @param {Boolean} [useRegExp] - whether to use the RegExp to test other types\n\t * @return {Boolean}\n\t */\n\tcount(eventType, useRegExp = true) {\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is not event map, just exit\n\t\tif (!eventMap) return 0;\n\n\t\tif (isString(eventType)) {\n\t\t\treturn eventMap.has(eventType) ? eventMap.get(eventType).length : 0;\n\t\t} else if (eventType instanceof Event) {\n\t\t\treturn eventMap.has(eventType.type) ? eventMap.get(eventType.type).length : 0;\n\t\t} else if (isRegExp(eventType)) {\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\tif (\n\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t) {\n\t\t\t\t\ttotal += listeners.length;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn total;\n\t\t} else {\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach(listeners => {\n\t\t\t\ttotal += listeners.length;\n\t\t\t});\n\t\t\treturn total;\n\t\t}\n\t}\n\n\t/**\n\t * cleans up the emitter for GC\n\t */\n\tdispose() {\n\t\tEmitter.removeEventMap(this);\n\t\treturn this;\n\t}\n}\n"],"names":["Event","type","args","target","isString","Error","clearListeners","eventMap","eventType","force","delete","listeners","get","filter","listener","isStatic","forEach","i","splice","indexOf","length","isRegExpEqual","r1","r2","RegExp","source","global","ignoreCase","multiline","sticky","unicode","objectProto","objectToString","isBoolean","v","findInArgArray","fn","start","df","Emitter","suppressEvents","getEventMap","emitter","map","events","WeakMap","createEventMap","Map","set","removeEventMap","has","context","times","isRegExp","isFunction","arguments","n","Number","isFinite","Infinity","o","undefined","push","on","listenerData","func","ctx","listenersEventType","event","listenerArgs","Array","from","concat","test","apply","off","useRegExp","a","clear","total"],"mappings":"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"}
{"version":3,"file":"regexp-events.js","sources":["../node_modules/lodash.isstring/index.js","../src/Event.js","../src/utils.js","../node_modules/lodash.isfunction/index.js","../node_modules/lodash.isregexp/index.js","../src/Emitter.js"],"sourcesContent":["/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import isString from 'lodash.isstring';\n\n/**\n * @classdesc the basic event class\n * @class Event\n */\nexport default class Event{\n\t/**\n\t * @param  {String} type - the type of event, this can be anything, but its a good idea just to make it a string\n\t * @param  {Emitter} target - the emitter that is firing this event\n\t * @param  {Array} args - an array of arguments that is used on the listener functions\n\t * @return {Event}\n\t */\n\tconstructor(type, args, target){\n\t\tif(!isString(type))\n\t\t\tthrow new Error('Event.type has to be a string');\n\n\t\t/**\n\t\t * the type of event\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * an array of arguments that are used when calling the listener function\n\t\t * @type {Array}\n\t\t */\n\t\tthis.args = args || [];\n\n\t\t/**\n\t\t * a reference to the emitter that fired the event\n\t\t * @type {Emitter}\n\t\t */\n\t\tthis.target = target;\n\t}\n}\n","export function clearListeners(eventMap, eventType, force){\n\tif(force) {\n\t\teventMap.delete(eventType);\n\t}\n\telse {\n\t\tlet listeners = eventMap.get(eventType);\n\t\tlisteners.filter(listener => !listener.isStatic).forEach((listener, i) => {\n\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t});\n\n\t\t// if there are not listeners left, remove the array\n\t\tif(listeners.length === 0)\n\t\t\teventMap.delete(eventType);\n\t}\n}\n\nexport function isRegExpEqual(r1, r2){\n\treturn (\n\t\tr1 instanceof RegExp &&\n\t\tr2 instanceof RegExp &&\n\t\tr2.source === r1.source &&\n\t\tr2.global === r1.global &&\n\t\tr2.ignoreCase === r1.ignoreCase &&\n\t\tr2.multiline === r1.multiline &&\n\t\tr2.sticky === r1.sticky &&\n\t\tr2.unicode === r1.unicode\n\t);\n}","/**\n * lodash 3.0.8 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isFunction;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObject(value) && objectToString.call(value) == regexpTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n","import Event from './Event';\nimport {clearListeners, isRegExpEqual} from './utils';\nimport isString from 'lodash.isstring';\nimport isFunction from 'lodash.isfunction';\nimport isRegExp from 'lodash.isregexp';\n\nfunction isBoolean(v) {\n\treturn v === true || v === false;\n}\n\nfunction findInArgArray(args, fn, start, df) {\n\tfor(let i = 0; i < args.length-start; i++)\n\t\tif(fn(args[start+i]))\n\t\t\treturn args[start+i];\n\n\treturn df;\n}\n\n/**\n * a simple event emitter\n */\nexport default class Emitter{\n\tconstructor(){\n\t\t/**\n\t\t * whether to suppress all events on this emitter\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.suppressEvents = false;\n\t}\n\n\t/**\n\t * returns the Map that is used to store events for emitters\n\t * @param {Emitter} emitter\n\t * @return {WeakMap}\n\t */\n\tstatic getEventMap(emitter){\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\treturn map.get(emitter);\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic createEventMap(emitter){\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tlet events = new Map();\n\t\tmap.set(emitter, events);\n\t\treturn events;\n\t}\n\n\t/**\n\t * creates a new Map for the emitter\n\t * @param {Emitter} emitter\n\t * @return {Map}\n\t */\n\tstatic removeEventMap(emitter){\n\t\tlet map = this.events || (this.events = new WeakMap());\n\t\tif(map.has(emitter))\n\t\t\tmap.delete(emitter);\n\t}\n\n\t/**\n\t * returns the Map used to store events\n\t * @return {Map}\n\t */\n\tget eventMap() {\n\t\treturn Emitter.getEventMap(this);\n\t}\n\n\t/**\n\t * listens for an event of this emitter\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - the function to be called when the event fires\n\t * @param  {Object|Boolean|Number} [context] - the context to run the function under\n\t * @param  {Boolean|Number|Object} [isStatic=true] - whether this listener can be removed without force\n\t * @param  {Number|Boolean|Object} [times=Infinity] the times this listener can be called before it removes it self\n\t * @return {this}\n\t */\n\ton(eventType, listener, context, isStatic, times){\n\t\tif(!isString(eventType) && !isRegExp(eventType) && !(eventType instanceof Event))\n\t\t\tthrow new Error('Emitter.on requires a String, Event or RegExp as the first argument');\n\n\t\tif(!isFunction(listener))\n\t\t\tthrow new Error('Emitter.on requires a function as the second argument');\n\n\t\tisStatic = findInArgArray(arguments, isBoolean, 2, false);\n\t\ttimes = findInArgArray(arguments, n => Number.isFinite(n) || n === Infinity, 2, Infinity);\n\t\tcontext = findInArgArray(arguments, o => {\n\t\t\treturn typeof o === 'object';\n\t\t}, 2, undefined);\n\n\t\tlet eventMap = this.eventMap;\n\t\tif(!eventMap)\n\t\t\teventMap = Emitter.createEventMap(this);\n\n\t\tif(eventType instanceof Event)\n\t\t\teventType = eventType.type;\n\n\t\tif(!eventMap.has(eventType))\n\t\t\teventMap.set(eventType, []);\n\n\t\t// add the listener to the array\n\t\teventMap.get(eventType).push({\n\t\t\tfunc: listener,\n\t\t\tctx: context,\n\t\t\ttimes: times,\n\t\t\tisStatic: isStatic\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * binds a listener that removes its self once the event is fired\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener\n\t * @param  {Object|Boolean} [context] - the context to run the functions under\n\t * @param  {Boolean|Object} [isStatic = false] - whether this listener can be removed without using force\n\t * @return {this}\n\t */\n\tonce(eventType, listener, context, isStatic){\n\t\treturn this.on(eventType, listener, 1, context, isStatic);\n\t}\n\n\t/**\n\t * removes a listener\n\t * @param  {RegExp|String|Event} eventType\n\t * @param  {Function} listener - this has to be the exact function that was bound\n\t * @param  {*|Boolean} [context] - this has to be the exact context that was bound with the listener\n\t * @param  {Boolean} [force=false] - whether to force remove the listeners\n\t * @return {this}\n\t */\n\toff(eventType, listener, context, force){\n\t\tif(eventType == null)\n\t\t\tthrow new Error('Emitter.off requires a String or a RegExp as the first argument');\n\n\t\tif(!isFunction(listener))\n\t\t\tthrow new Error('Emitter.off requires a function as the second argument');\n\n\t\tforce = findInArgArray(arguments, isBoolean, 2, false);\n\t\tcontext = findInArgArray(arguments, o => typeof o === 'object', 2, undefined);\n\n\t\tif(eventType instanceof Event)\n\t\t\teventType = eventType.type;\n\n\t\tlet eventMap = this.eventMap;\n\t\tif(!eventMap)\n\t\t\treturn this; // if there is not event map, just exit\n\n\t\tif(!eventMap.has(eventType))\n\t\t\teventMap.set(eventType, []);\n\n\t\tif(isString(eventType)){\n\t\t\tlet listeners = eventMap.get(eventType);\n\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\tif(listenerData.func === listener && listenerData.ctx === context && (listenerData.isStatic? force : true))\n\t\t\t\t\tlisteners.splice(i,1);\n\t\t\t});\n\n\t\t\t// remove the listener array if there are no listeners left\n\t\t\tif(listeners.length === 0)\n\t\t\t\teventMap.delete(eventType);\n\t\t}\n\t\telse if(isRegExp(eventType)){\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\t// if the regexp flags and source match then remove the listeners\n\t\t\t\tif(isRegExp(listenersEventType) && isRegExpEqual(eventType, listenersEventType)){\n\t\t\t\t\tlisteners.forEach((listenerData, i) => {\n\t\t\t\t\t\tif(listenerData.func === listener && listenerData.ctx === context && (listenerData.isStatic? force : true))\n\t\t\t\t\t\t\tlisteners.splice(i,1);\n\t\t\t\t\t});\n\n\t\t\t\t\t// remove the listener array if there are no listeners left\n\t\t\t\t\tif(listeners.length === 0)\n\t\t\t\t\t\teventMap.delete(listenersEventType);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * fires ad event on this emitter\n\t * @param {String|Event} eventType\n\t * @param {...*} args - the arguments to be passed to the listeners. these will be ignored if an Event was passed in\n\t * @return {this}\n\t */\n\temit(eventType, ...args){\n\t\tif(this.suppressEvents) return;\n\t\tlet eventMap = this.eventMap;\n\t\tlet event;\n\n\t\t// if there is not event map, just exit\n\t\tif(!eventMap)\n\t\t\treturn this;\n\n\t\t// if its an event use the events type\n\t\tif(eventType instanceof Event){\n\t\t\tevent = eventType;\n\n\t\t\t// if the event dose not have a target set it to this emitter\n\t\t\tif(event.target === undefined)\n\t\t\t\tevent.target = this;\n\t\t}\n\t\telse if(isString(eventType))\n\t\t\tevent = new Event(eventType, args, this);\n\t\telse\n\t\t\tthrow new Error('Emitter.emit requires a String or Event as the first argument');\n\n\t\tlet listenerArgs = Array.from(event.args).concat([event]);\n\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\tif(\n\t\t\t\t// if they are both strings and they match\n\t\t\t\t(isString(event.type) && listenersEventType === event.type) ||\n\t\t\t\t// if the listenersEventType is a RegExp and the event type is a string, see if they match\n\t\t\t\t(isString(event.type) && isRegExp(listenersEventType) && listenersEventType.test(event.type)) ||\n\t\t\t\t// if they are both RegExp see if they match\n\t\t\t\t(isRegExp(event.type) && isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, event.type))\n\t\t\t){\n\t\t\t\tlisteners.forEach(listener => {\n\t\t\t\t\tlistener.func.apply(listener.ctx, listenerArgs);\n\t\t\t\t\tif(--listener.times <= 0)\n\t\t\t\t\t\tthis.off(event.type, listener.func, listener.ctx, true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * removes all events of \"eventType\"\n\t * NOTE: passing no arguments will clean all listeners\n\t * NOTE: passing a single boolean will clear all listens and act as the force flag\n\t * @param {RegExp|String|Event|Boolean} [eventType] - the type of event\n\t * @param {Boolean} [force = false] - whether to force remove the listeners\n\t * @param {Boolean} [useRegExp = true] - whether to use the RegExp to test other types\n\t * @return {this}\n\t */\n\tclear(eventType, force = false, useRegExp = true){\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is no event map, just exit\n\t\tif(!eventMap)\n\t\t\treturn this;\n\n\t\tif(isString(eventType)){\n\t\t\tclearListeners(eventMap, eventType, force);\n\t\t}\n\t\telse if(eventType instanceof Event){\n\t\t\tclearListeners(eventMap, eventType.type, force);\n\t\t}\n\t\telse if(isRegExp(eventType)){\n\t\t\tArray.from(eventMap).map(a => a[0]).forEach(listenersEventType => {\n\t\t\t\tif(\n\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t){\n\t\t\t\t\tclearListeners(eventMap, listenersEventType, force);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse if(arguments.length === 1 && eventType === true){\n\t\t\t// remove all listeners\n\t\t\teventMap.clear();\n\t\t}\n\t\telse if((eventType === false || eventType === undefined) && arguments.length <= 1){\n\t\t\t// remove all listeners that are not static\n\t\t\teventMap.forEach((listeners, type) => {\n\t\t\t\tlisteners.filter(listener => !listener.isStatic).forEach(listener => {\n\t\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t\t});\n\n\t\t\t\t// if there are no listeners left, remove the array\n\t\t\t\tif(listeners.length === 0)\n\t\t\t\t\teventMap.delete(type);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * returns the number of listeners bound to the event\n\t * @param  {RegExp|String|Event} [eventType]\n\t * @param {Boolean} [useRegExp] - whether to use the RegExp to test other types\n\t * @return {Boolean}\n\t */\n\tcount(eventType, useRegExp = true){\n\t\tlet eventMap = this.eventMap;\n\n\t\t// if there is not event map, just exit\n\t\tif(!eventMap)\n\t\t\treturn 0;\n\n\t\tif(isString(eventType)){\n\t\t\treturn eventMap.has(eventType) ? eventMap.get(eventType).length : 0;\n\t\t}\n\t\telse if(eventType instanceof Event){\n\t\t\treturn eventMap.has(eventType.type) ? eventMap.get(eventType.type).length : 0;\n\t\t}\n\t\telse if(isRegExp(eventType)){\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach((listeners, listenersEventType) => {\n\t\t\t\tif(\n\t\t\t\t\t// if the string matches the regex\n\t\t\t\t\t(isString(listenersEventType) && useRegExp && eventType.test(listenersEventType)) ||\n\t\t\t\t\t// if the regex(s) match\n\t\t\t\t\t(isRegExp(listenersEventType) && isRegExpEqual(listenersEventType, eventType))\n\t\t\t\t){\n\t\t\t\t\ttotal += listeners.length;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn total;\n\t\t}\n\t\telse{\n\t\t\tlet total = 0;\n\t\t\teventMap.forEach(listeners => {\n\t\t\t\ttotal += listeners.length;\n\t\t\t});\n\t\t\treturn total;\n\t\t}\n\t}\n\n\t/**\n\t * cleans up the emitter for GC\n\t */\n\tdispose(){\n\t\tEmitter.removeEventMap(this);\n\t\treturn this;\n\t}\n}\n"],"names":["Event","type","args","target","isString","Error","clearListeners","eventMap","eventType","force","delete","listeners","get","filter","listener","isStatic","forEach","i","splice","indexOf","length","isRegExpEqual","r1","r2","RegExp","source","global","ignoreCase","multiline","sticky","unicode","objectProto","objectToString","isBoolean","v","findInArgArray","fn","start","df","Emitter","suppressEvents","context","times","isRegExp","isFunction","arguments","Number","isFinite","n","Infinity","o","undefined","createEventMap","has","set","push","on","listenerData","func","ctx","listenersEventType","event","listenerArgs","Array","from","concat","test","apply","off","useRegExp","map","a","clear","total","removeEventMap","getEventMap","emitter","events","WeakMap","Map"],"mappings":"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"}
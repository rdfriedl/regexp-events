/* regexp-events v1.0.0 */
function isObjectLike(e){return!!e&&"object"==typeof e}function isString(e){return"string"==typeof e||!isArray(e)&&isObjectLike(e)&&objectToString.call(e)==stringTag}function clearListeners(e,t,n){if(n)e.delete(t);else{let n=e.get(t);n.filter(e=>!e.isStatic).forEach((e,t)=>{n.splice(n.indexOf(e),1)}),0===n.length&&e.delete(t)}}function isRegExpEqual(e,t){return e instanceof RegExp&&t instanceof RegExp&&t.source===e.source&&t.global===e.global&&t.ignoreCase===e.ignoreCase&&t.multiline===e.multiline&&t.sticky===e.sticky&&t.unicode===e.unicode}function isFunction(e){var t=isObject(e)?objectToString$1.call(e):"";return t==funcTag||t==genTag}function isObject(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function createCommonjsModule(e,t){return t={exports:{}},e(t,t.exports),t.exports}function isBoolean(e){return!0===e||!1===e}function findInArgArray(e,t,n,r){for(let r=0;r<e.length-n;r++)if(t(e[n+r]))return e[n+r];return r}var stringTag="[object String]",objectProto=Object.prototype,objectToString=objectProto.toString,isArray=Array.isArray,index=isString;class Event{constructor(e,t,n){if(!index(e))throw new Error("Event.type has to be a string");this.type=e,this.args=t||[],this.target=n}}var funcTag="[object Function]",genTag="[object GeneratorFunction]",objectProto$1=Object.prototype,objectToString$1=objectProto$1.toString,index$1=isFunction,commonjsGlobal="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},index$2=createCommonjsModule(function(e,t){function n(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var r="[object RegExp]",i="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,o=t&&!t.nodeType&&t,s=o&&!0&&e&&!e.nodeType&&e,a=s&&s.exports===o&&i.process,c=function(){try{return a&&a.binding("util")}catch(e){}}(),f=c&&c.isRegExp,u=Object.prototype.toString,l=f?function(e){return function(t){return e(t)}}(f):function(e){return n(e)&&u.call(e)==r};e.exports=l});class Emitter{constructor(){this.suppressEvents=!1}static getEventMap(e){return(this.events||(this.events=new WeakMap)).get(e)}static createEventMap(e){let t=this.events||(this.events=new WeakMap),n=new Map;return t.set(e,n),n}static removeEventMap(e){let t=this.events||(this.events=new WeakMap);t.has(e)&&t.delete(e)}get eventMap(){return Emitter.getEventMap(this)}on(e,t,n,r,i){if(!(index(e)||index$2(e)||e instanceof Event))throw new Error("Emitter.on requires a String, Event or RegExp as the first argument");if(!index$1(t))throw new Error("Emitter.on requires a function as the second argument");r=findInArgArray(arguments,isBoolean,2,!1),i=findInArgArray(arguments,e=>Number.isFinite(e)||e===1/0,2,1/0),n=findInArgArray(arguments,e=>"object"==typeof e,2,void 0);let o=this.eventMap;return o||(o=Emitter.createEventMap(this)),e instanceof Event&&(e=e.type),o.has(e)||o.set(e,[]),o.get(e).push({func:t,ctx:n,times:i,isStatic:r}),this}once(e,t,n,r){return this.on(e,t,1,n,r)}off(e,t,n,r){if(null==e)throw new Error("Emitter.off requires a String or a RegExp as the first argument");if(!index$1(t))throw new Error("Emitter.off requires a function as the second argument");r=findInArgArray(arguments,isBoolean,2,!1),n=findInArgArray(arguments,e=>"object"==typeof e,2,void 0),e instanceof Event&&(e=e.type);let i=this.eventMap;if(!i)return this;if(i.has(e)||i.set(e,[]),index(e)){let o=i.get(e);o.forEach((e,i)=>{e.func!==t||e.ctx!==n||e.isStatic&&!r||o.splice(i,1)}),0===o.length&&i.delete(e)}else index$2(e)&&i.forEach((o,s)=>{index$2(s)&&isRegExpEqual(e,s)&&(o.forEach((e,i)=>{e.func!==t||e.ctx!==n||e.isStatic&&!r||o.splice(i,1)}),0===o.length&&i.delete(s))});return this}emit(e,...t){if(this.suppressEvents)return;let n,r=this.eventMap;if(!r)return this;if(e instanceof Event)void 0===(n=e).target&&(n.target=this);else{if(!index(e))throw new Error("Emitter.emit requires a String or Event as the first argument");n=new Event(e,t,this)}let i=Array.from(n.args).concat([n]);return r.forEach((e,t)=>{(index(n.type)&&t===n.type||index(n.type)&&index$2(t)&&t.test(n.type)||index$2(n.type)&&index$2(t)&&isRegExpEqual(t,n.type))&&e.forEach(e=>{e.func.apply(e.ctx,i),--e.times<=0&&this.off(n.type,e.func,e.ctx,!0)})}),this}clear(e,t=!1,n=!0){let r=this.eventMap;return r?(index(e)?clearListeners(r,e,t):e instanceof Event?clearListeners(r,e.type,t):index$2(e)?Array.from(r).map(e=>e[0]).forEach(i=>{(index(i)&&n&&e.test(i)||index$2(i)&&isRegExpEqual(i,e))&&clearListeners(r,i,t)}):1===arguments.length&&!0===e?r.clear():(!1===e||void 0===e)&&arguments.length<=1&&r.forEach((e,t)=>{e.filter(e=>!e.isStatic).forEach(t=>{e.splice(e.indexOf(t),1)}),0===e.length&&r.delete(t)}),this):this}count(e,t=!0){let n=this.eventMap;if(!n)return 0;if(index(e))return n.has(e)?n.get(e).length:0;if(e instanceof Event)return n.has(e.type)?n.get(e.type).length:0;if(index$2(e)){let r=0;return n.forEach((n,i)=>{(index(i)&&t&&e.test(i)||index$2(i)&&isRegExpEqual(i,e))&&(r+=n.length)}),r}{let e=0;return n.forEach(t=>{e+=t.length}),e}}dispose(){return Emitter.removeEventMap(this),this}}export{Emitter,Event};
//# sourceMappingURL=regexp-events.es.min.js.map

/* regexp-events v1.0.0 */
function createCommonjsModule(t,e){return e={exports:{}},t(e,e.exports),e.exports}function getRawTag(t){var e=hasOwnProperty.call(t,symToStringTag$1),n=t[symToStringTag$1];try{t[symToStringTag$1]=void 0}catch(t){}var i=nativeObjectToString.call(t);return e?t[symToStringTag$1]=n:delete t[symToStringTag$1],i}function objectToString(t){return nativeObjectToString$1.call(t)}function baseGetTag(t){return null==t?void 0===t?undefinedTag:nullTag:symToStringTag&&symToStringTag in Object(t)?_getRawTag(t):_objectToString(t)}function isObjectLike(t){return null!=t&&"object"==typeof t}function isString(t){return"string"==typeof t||!isArray_1(t)&&isObjectLike_1(t)&&_baseGetTag(t)==stringTag}function clearListeners(t,e,n){if(n)t.delete(e);else{let n=t.get(e);n.filter(t=>!t.isStatic).forEach((t,e)=>{n.splice(n.indexOf(t),1)}),0===n.length&&t.delete(e)}}function isRegExpEqual(t,e){return t instanceof RegExp&&e instanceof RegExp&&e.source===t.source&&e.global===t.global&&e.ignoreCase===t.ignoreCase&&e.multiline===t.multiline&&e.sticky===t.sticky&&e.unicode===t.unicode}function isObjectLike$2(t){return!!t&&"object"==typeof t}function isString$2(t){return"string"==typeof t||!isArray$2(t)&&isObjectLike$2(t)&&objectToString$2.call(t)==stringTag$1}function isFunction(t){var e=isObject(t)?objectToString$3.call(t):"";return e==funcTag||e==genTag}function isObject(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function isBoolean(t){return!0===t||!1===t}function findInArgArray(t,e,n,i){for(let i=0;i<t.length-n;i++)if(e(t[n+i]))return t[n+i];return i}var commonjsGlobal="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},freeGlobal="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,_freeGlobal=freeGlobal,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=_freeGlobal||freeSelf||Function("return this")(),_root=root,Symbol=_root.Symbol,_Symbol=Symbol,objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag$1=_Symbol?_Symbol.toStringTag:void 0,_getRawTag=getRawTag,objectProto$1=Object.prototype,nativeObjectToString$1=objectProto$1.toString,_objectToString=objectToString,nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag=_Symbol?_Symbol.toStringTag:void 0,_baseGetTag=baseGetTag,isArray=Array.isArray,isArray_1=isArray,isObjectLike_1=isObjectLike,stringTag="[object String]",isstring=isString;class Event{constructor(t,e,n){if(!isstring(t))throw new Error("Event.type has to be a string");this.type=t,this.args=e||[],this.target=n}}var stringTag$1="[object String]",objectProto$2=Object.prototype,objectToString$2=objectProto$2.toString,isArray$2=Array.isArray,index=isString$2,funcTag="[object Function]",genTag="[object GeneratorFunction]",objectProto$3=Object.prototype,objectToString$3=objectProto$3.toString,index$1=isFunction,index$2=createCommonjsModule(function(t,e){function n(t){return i(t)&&b.call(t)==o}function i(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}var o="[object RegExp]",r="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,s=e&&!e.nodeType&&e,c=s&&!0&&t&&!t.nodeType&&t,a=c&&c.exports===s,f=a&&r.process,u=function(){try{return f&&f.binding("util")}catch(t){}}(),g=u&&u.isRegExp,l=Object.prototype,b=l.toString,p=g?function(t){return function(e){return t(e)}}(g):n;t.exports=p});class Emitter{constructor(){this.suppressEvents=!1}static getEventMap(t){return(this.events||(this.events=new WeakMap)).get(t)}static createEventMap(t){let e=this.events||(this.events=new WeakMap),n=new Map;return e.set(t,n),n}static removeEventMap(t){let e=this.events||(this.events=new WeakMap);e.has(t)&&e.delete(t)}get eventMap(){return Emitter.getEventMap(this)}on(t,e,n,i,o){if(!(index(t)||index$2(t)||t instanceof Event))throw new Error("Emitter.on requires a String, Event or RegExp as the first argument");if(!index$1(e))throw new Error("Emitter.on requires a function as the second argument");i=findInArgArray(arguments,isBoolean,2,!1),o=findInArgArray(arguments,t=>Number.isFinite(t)||t===1/0,2,1/0),n=findInArgArray(arguments,t=>{console.log(typeof t);return"object"==typeof t},2,void 0);let r=this.eventMap;return r||(r=Emitter.createEventMap(this)),t instanceof Event&&(t=t.type),r.has(t)||r.set(t,[]),r.get(t).push({func:e,ctx:n,times:o,isStatic:i}),this}once(t,e,n,i){return this.on(t,e,1,n,i)}off(t,e,n,i){if(null==t)throw new Error("Emitter.off requires a String or a RegExp as the first argument");if(!index$1(e))throw new Error("Emitter.off requires a function as the second argument");i=findInArgArray(arguments,isBoolean,2,!1),n=findInArgArray(arguments,t=>"object"==typeof t,2,void 0),t instanceof Event&&(t=t.type);let o=this.eventMap;if(!o)return this;if(o.has(t)||o.set(t,[]),index(t)){let r=o.get(t);r.forEach((t,o)=>{t.func!==e||t.ctx!==n||t.isStatic&&!i||r.splice(o,1)}),0===r.length&&o.delete(t)}else index$2(t)&&o.forEach((r,s)=>{index$2(s)&&isRegExpEqual(t,s)&&(r.forEach((t,o)=>{t.func!==e||t.ctx!==n||t.isStatic&&!i||r.splice(o,1)}),0===r.length&&o.delete(s))});return this}emit(t,...e){if(!this.suppressEvents){let n,i=this.eventMap;if(!i)return this;if(t instanceof Event)n=t,void 0===n.target&&(n.target=this);else{if(!index(t))throw new Error("Emitter.emit requires a String or Event as the first argument");n=new Event(t,e,this)}let o=Array.from(n.args).concat([n]);return i.forEach((t,e)=>{(index(n.type)&&e===n.type||index(n.type)&&index$2(e)&&e.test(n.type)||index$2(n.type)&&index$2(e)&&isRegExpEqual(e,n.type))&&t.forEach(t=>{t.func.apply(t.ctx,o);--t.times<=0&&this.off(n.type,t.func,t.ctx,!0)})}),this}}clear(t,e=!1,n=!0){let i=this.eventMap;return i?(index(t)?clearListeners(i,t,e):t instanceof Event?clearListeners(i,t.type,e):index$2(t)?Array.from(i).map(t=>t[0]).forEach(o=>{(index(o)&&n&&t.test(o)||index$2(o)&&isRegExpEqual(o,t))&&clearListeners(i,o,e)}):1===arguments.length&&!0===t?i.clear():(!1===t||void 0===t)&&arguments.length<=1&&i.forEach((t,e)=>{t.filter(t=>!t.isStatic).forEach(e=>{t.splice(t.indexOf(e),1)});0===t.length&&i.delete(e)}),this):this}count(t,e=!0){let n=this.eventMap;if(!n)return 0;if(index(t))return n.has(t)?n.get(t).length:0;if(t instanceof Event)return n.has(t.type)?n.get(t.type).length:0;if(index$2(t)){let i=0;return n.forEach((n,o)=>{(index(o)&&e&&t.test(o)||index$2(o)&&isRegExpEqual(o,t))&&(i+=n.length)}),i}{let t=0;return n.forEach(e=>{t+=e.length}),t}}dispose(){return Emitter.removeEventMap(this),this}}export{Emitter,Event};
//# sourceMappingURL=regexp-events.es.min.js.map
